<?php


namespace core;


class Token
{
    protected $token;

    public function __construct($token = null)
    {
        if ($token) {
            $this->token = $token;
        } else {
            // random_bytes generates an arbitrary length string of cryptographic random bytes that are suitable for cryptographic use
            // bin2hex converts binary data into hexadecimal representation
            $this->token = bin2hex(random_bytes(16));  // 16 bytes = 128 bits = 32 hex characters
        }
    }

    public function getToken()
    {
        return $this->token;
    }

    public function getHashedToken()
    {
        // token secret key was generated by https://randomkeygen.com/ (CodeIgniter Encryption Keys)
        // hash_hmac generates a keyed hash value using the HMAC method
        return hash_hmac('sha256', $this->token, $_ENV['TOKEN_SECRET_KEY']);  // sha256 = 64 chars
    }
}
